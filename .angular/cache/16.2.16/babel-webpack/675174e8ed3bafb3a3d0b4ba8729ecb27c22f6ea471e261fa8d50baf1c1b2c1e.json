{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/comment.service\";\nimport * as i2 from \"../../auth/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/forms\";\n;\nlet UserCommentComponent = /*#__PURE__*/(() => {\n  class UserCommentComponent {\n    constructor(commentService, authService, router, toastr) {\n      this.commentService = commentService;\n      this.authService = authService;\n      this.router = router;\n      this.toastr = toastr;\n      this.commentAdded = new EventEmitter();\n      this.activeReplyId = null;\n      this.model = {\n        comicId: null,\n        content: null,\n        applicationUserId: '',\n        parentCommentId: null,\n        replyUserName: '',\n        answer: 0,\n        email: ''\n      };\n    }\n    OnSubmitComment() {\n      if (this.user?.applicationUserId) {\n        if (this.model.answer == 15) {\n          if (this.model.content != null && this.model.content.length < 200) {\n            this.model.comicId = this.comicId;\n            this.model.applicationUserId = this.user?.applicationUserId;\n            console.log('commentRequest', this.model);\n            this.commentService.createComment(this.model).subscribe({\n              next: response => {\n                console.log('Comment response added:', response);\n                const updatedResponse = {\n                  ...response,\n                  applicationUser: {\n                    ...(response.applicationUser || {}),\n                    userName: this.user?.email // Thêm userName từ user hiện tại\n                  }\n                };\n\n                this.commentAdded.emit(updatedResponse);\n                this.resetModel();\n              },\n              error: err => {\n                console.error('Error adding comment:', err);\n              }\n            });\n            this.activeReplyId = null; // Đóng hộp thoại sau khi gửi\n          } else {\n            this.toastr.error('Invalid value !');\n          }\n        } else {\n          this.toastr.error('Invalid value !');\n        }\n      } else {\n        this.toastr.warning('You need to login !');\n      }\n    }\n    ngOnInit() {\n      this.user = this.authService.getUser();\n    }\n    ngOnDestroy() {\n      this.AddCommentSubscription?.unsubscribe();\n    }\n    resetModel() {\n      this.model = {\n        comicId: null,\n        content: '',\n        applicationUserId: null,\n        parentCommentId: null,\n        answer: 0,\n        email: ''\n      };\n    }\n    static {\n      this.ɵfac = function UserCommentComponent_Factory(t) {\n        return new (t || UserCommentComponent)(i0.ɵɵdirectiveInject(i1.CommentService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: UserCommentComponent,\n        selectors: [[\"app-user-comment\"]],\n        inputs: {\n          comicId: \"comicId\"\n        },\n        outputs: {\n          commentAdded: \"commentAdded\"\n        },\n        decls: 26,\n        vars: 2,\n        consts: [[1, \"\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-section\", \"mt-5\"], [1, \"mb-3\"], [\"id\", \"content\", \"name\", \"content\", \"rows\", \"4\", \"placeholder\", \"Write your review here...\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"alert\", \"alert-warning\", \"d-flex\", \"align-items-center\", \"mb-3\"], [1, \"me-2\"], [\"id\", \"answer\", \"name\", \"answer\", \"type\", \"text\", \"placeholder\", \"Enter the answer to the question\", 1, \"form-control\", \"mb-3\", 3, \"ngModel\", \"ngModelChange\"], [1, \"d-flex\", \"justify-content-between\", \"align-items-center\"], [\"type\", \"submit\", 1, \"btn\", \"btn-warning\", \"px-4\"]],\n        template: function UserCommentComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelementStart(0, \"form\", 0, 1);\n            i0.ɵɵlistener(\"ngSubmit\", function UserCommentComponent_Template_form_ngSubmit_0_listener() {\n              return ctx.OnSubmitComment();\n            });\n            i0.ɵɵelementStart(2, \"div\", 2)(3, \"h4\");\n            i0.ɵɵtext(4, \"Reviews after reading (12):\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(5, \"ul\")(6, \"li\")(7, \"p\");\n            i0.ɵɵtext(8, \"\\u26A0\\uFE0F Is there something wrong with the chapter? Please notify via the \\\"Complain\\\" button and indicate the chapter numbers.\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(9, \"li\")(10, \"p\");\n            i0.ɵɵtext(11, \"\\u26A0\\uFE0F The minimum comment length is 200 characters. Respect yourself and others!\");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(12, \"li\")(13, \"p\");\n            i0.ɵɵtext(14, \"\\u26A0\\uFE0F Comments are moderated, there is no point in writing again.\");\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(15, \"div\", 3)(16, \"textarea\", 4);\n            i0.ɵɵlistener(\"ngModelChange\", function UserCommentComponent_Template_textarea_ngModelChange_16_listener($event) {\n              return ctx.model.content = $event;\n            });\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(17, \"div\", 5)(18, \"span\", 6);\n            i0.ɵɵtext(19, \"\\u26A0\\uFE0F\");\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(20, \"div\");\n            i0.ɵɵtext(21, \" How many letters are in the word 'H\\u1EEEU TRUNG \\u0110\\u1EB8P TRAI '? (15) (in numbers) * \");\n            i0.ɵɵelementEnd()();\n            i0.ɵɵelementStart(22, \"input\", 7);\n            i0.ɵɵlistener(\"ngModelChange\", function UserCommentComponent_Template_input_ngModelChange_22_listener($event) {\n              return ctx.model.answer = $event;\n            });\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(23, \"div\", 8)(24, \"button\", 9);\n            i0.ɵɵtext(25, \"Submit\");\n            i0.ɵɵelementEnd()()()();\n          }\n          if (rf & 2) {\n            i0.ɵɵadvance(16);\n            i0.ɵɵproperty(\"ngModel\", ctx.model.content);\n            i0.ɵɵadvance(6);\n            i0.ɵɵproperty(\"ngModel\", ctx.model.answer);\n          }\n        },\n        dependencies: [i5.ɵNgNoValidate, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgControlStatusGroup, i5.NgModel, i5.NgForm],\n        styles: [\".comments-box[_ngcontent-%COMP%]{border:solid 1px #444;padding:10px;margin-bottom:10px;border-radius:5px;background-color:#212529;color:#fff;width:100%}.comments-header[_ngcontent-%COMP%]{display:flex;align-items:center}.user-avatar[_ngcontent-%COMP%]{width:40px;height:40px;border-radius:50%;background-color:#444;margin-right:10px}.text-white[_ngcontent-%COMP%]{color:#f2f2f2;font-weight:700}.comments-meta[_ngcontent-%COMP%]{font-size:.9rem;color:#ccc}.comments-actions[_ngcontent-%COMP%]{display:flex;gap:5px;margin-top:10px}.comments-actions[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;display:flex;align-items:center;font-size:.8rem}.action-btn[_ngcontent-%COMP%]{color:#fff;text-decoration:none;cursor:pointer;font-size:.8rem;transition:color .2s ease}.action-btn[_ngcontent-%COMP%]:hover{text-decoration:underline}.replies[_ngcontent-%COMP%]{margin-left:20px;margin-top:10px}.replies[_ngcontent-%COMP%]   .comments-box[_ngcontent-%COMP%]{border:solid 1px #555;margin-bottom:10px;background-color:#2c2f33}.reply-box[_ngcontent-%COMP%]{background-color:#212529;padding:10px;margin-top:10px;border-radius:5px}.reply-box[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;border:1px solid #555555;background-color:#2c2c2c;color:#fff;border-radius:5px;padding:5px}.reply-box[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#007bff;border:none;color:#fff;padding:8px 16px;border-radius:5px;cursor:pointer}.reply-box[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#0056b3}\"]\n      });\n    }\n  }\n  return UserCommentComponent;\n})();\nexport { UserCommentComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}