{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"ngx-cookie-service\";\nlet AuthService = /*#__PURE__*/(() => {\n  class AuthService {\n    constructor(http, cookieService) {\n      this.http = http;\n      this.cookieService = cookieService;\n      this.$user = new BehaviorSubject(undefined);\n    }\n    logout() {\n      localStorage.clear();\n      this.cookieService.delete('Authorization', '/');\n      this.$user.next(undefined);\n    }\n    getUser() {\n      const email = localStorage.getItem('user-email');\n      const roles = localStorage.getItem('user-roles');\n      const applicationUserId = localStorage.getItem('application-user-id');\n      if (email && roles && applicationUserId) {\n        const user = {\n          email: email,\n          applicationUserId: applicationUserId,\n          roles: roles?.split(',')\n        };\n        return user;\n      }\n      return undefined;\n    }\n    login(request) {\n      console.log(\"request\", request.email, request.password);\n      return this.http.post(`${environment.apiBaseUrl}/api/Auth/Login`, {\n        email: request.email,\n        password: request.password\n      });\n    }\n    setUser(user) {\n      this.$user.next(user);\n      localStorage.setItem('user-email', user.email);\n      localStorage.setItem('application-user-id', user.applicationUserId);\n      localStorage.setItem('user-roles', user.roles.join(','));\n    }\n    User() {\n      return this.$user.asObservable();\n    }\n    static {\n      this.ɵfac = function AuthService_Factory(t) {\n        return new (t || AuthService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.CookieService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: AuthService,\n        factory: AuthService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AuthService;\n})();\nexport { AuthService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}