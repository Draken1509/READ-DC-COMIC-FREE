{"ast":null,"code":"import { map } from 'rxjs';\nimport { baseUrlImage, environment } from 'src/environments/environment.development';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nlet BookmarksService = /*#__PURE__*/(() => {\n  class BookmarksService {\n    constructor(http) {\n      this.http = http;\n    }\n    addOrUpdateBookmark(userId, comicId, model) {\n      return this.http.post(`${environment.apiBaseUrl}/api/Bookmark?userId=${userId}&ComicId=${comicId}&addAuth=true`, model);\n    }\n    getStatusBookmark(userId = '', comicId = 0) {\n      return this.http.get(`${environment.apiBaseUrl}/api/Bookmark/status?userId=${userId}&ComicId=${comicId}`);\n    }\n    getSavedComic(id) {\n      return this.http.get(`${environment.apiBaseUrl}/api/Bookmark/saved/${id}?addAuth=true`).pipe(map(comics => comics.map(comic => ({\n        ...comic,\n        thumbnail: comic.thumbnail ? `${baseUrlImage.apiBaseUrl}/${comic.thumbnail}` : 'assets/default-image.jpg'\n      }))));\n    }\n    getReadComic(id) {\n      return this.http.get(`${environment.apiBaseUrl}/api/Bookmark/read/${id}?addAuth=true`).pipe(map(comics => comics.map(comic => ({\n        ...comic,\n        thumbnail: comic.thumbnail ? `${baseUrlImage.apiBaseUrl}/${comic.thumbnail}` : 'assets/default-image.jpg'\n      }))));\n    }\n    getCurrentlyReadingComic(id) {\n      return this.http.get(`${baseUrlImage.apiBaseUrl}/api/Bookmark/currently-reading/${id}?addAuth=true`).pipe(map(comics => comics.map(comic => ({\n        ...comic,\n        thumbnail: comic.thumbnail ? `${environment.apiBaseUrl}/${comic.thumbnail}` : 'assets/default-image.jpg'\n      }))));\n    }\n    static {\n      this.ɵfac = function BookmarksService_Factory(t) {\n        return new (t || BookmarksService)(i0.ɵɵinject(i1.HttpClient));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: BookmarksService,\n        factory: BookmarksService.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return BookmarksService;\n})();\nexport { BookmarksService };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}