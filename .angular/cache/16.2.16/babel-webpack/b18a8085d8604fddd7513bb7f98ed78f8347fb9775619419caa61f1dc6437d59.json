{"ast":null,"code":"import { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router';\nimport { inject } from '@angular/core';\nimport { AuthService } from '../services/auth.service';\nimport jwt_decode from 'jwt-decode';\nimport { ToastrService } from 'ngx-toastr';\nexport const authGuard = (route, state) => {\n  const cookieService = inject(CookieService);\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  const user = authService.getUser();\n  const toastr = inject(ToastrService);\n  let token = cookieService.get('Authorization');\n  if (token && user) {\n    token = token.replace('Bearer', '');\n    const decodedToken = jwt_decode(token);\n    const expirationDate = decodedToken.exp * 1000;\n    const currentTime = new Date().getTime();\n    if (expirationDate < currentTime) {\n      authService.logout();\n      return router.createUrlTree(['/login'], {\n        queryParams: {\n          returnUrl: state.url\n        }\n      });\n    } else {\n      //Token still valid\n      if (user?.roles.includes('Customer')) {\n        return true;\n      } else {\n        toastr.error('Unauthorized access', 'Access Denied');\n        return false;\n      }\n    }\n  } else {\n    authService.logout();\n    //alert('This function is only available to users with accounts !');    \n    toastr.error('Unauthorized access', 'Access Denied');\n    // return router.createUrlTree(['/login'], {queryParams :{returnUrl:state.url}});\n    return false;\n  }\n};","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}