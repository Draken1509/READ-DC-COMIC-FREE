{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/comment.service\";\nimport * as i2 from \"../../auth/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"ngx-toastr\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\nfunction UserReplyComponent_div_0_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"span\", 20);\n    i0.ɵɵtext(2, \" Reply to \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const comment_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"\", comment_r1.replyUserName, \" \");\n  }\n}\nfunction UserReplyComponent_div_0_div_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 22)(1, \"textarea\", 23);\n    i0.ɵɵlistener(\"ngModelChange\", function UserReplyComponent_div_0_div_25_Template_textarea_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.model.content = $event);\n    });\n    i0.ɵɵtext(2, \"      \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 24);\n    i0.ɵɵtext(4, \" Submit \");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r5.model.content);\n  }\n}\nfunction UserReplyComponent_div_0_div_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"app-user-reply\", 26);\n    i0.ɵɵlistener(\"commentAdded\", function UserReplyComponent_div_0_div_26_Template_app_user_reply_commentAdded_1_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.commentAdded.emit($event));\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const comment_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"comicId\", ctx_r6.comicId)(\"comments\", comment_r1.replies);\n  }\n}\nfunction UserReplyComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2);\n    i0.ɵɵelement(2, \"div\", 3);\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"strong\", 5);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, UserReplyComponent_div_0_span_6_Template, 5, 1, \"span\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 7);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"date\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"p\", 8);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 9)(13, \"a\");\n    i0.ɵɵelement(14, \"i\", 10);\n    i0.ɵɵelementStart(15, \"span\", 11);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(17, \"a\", 12);\n    i0.ɵɵlistener(\"click\", function UserReplyComponent_div_0_Template_a_click_17_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const comment_r1 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.toggleReplyBox(comment_r1.commentId));\n    });\n    i0.ɵɵelement(18, \"i\", 13);\n    i0.ɵɵelementStart(19, \"span\", 14);\n    i0.ɵɵtext(20, \"Reply\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"a\", 15);\n    i0.ɵɵtext(22, \"Report\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"form\", 16, 17);\n    i0.ɵɵlistener(\"ngSubmit\", function UserReplyComponent_div_0_Template_form_ngSubmit_23_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const comment_r1 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.OnSubmitReply(comment_r1.commentId));\n    });\n    i0.ɵɵtemplate(25, UserReplyComponent_div_0_div_25_Template, 5, 1, \"div\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(26, UserReplyComponent_div_0_div_26_Template, 2, 2, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const comment_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(comment_r1.applicationUser == null ? null : comment_r1.applicationUser.userName);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comment_r1.parentCommentId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind2(9, 7, comment_r1.createAt, \"dd/MM/yyyy\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(comment_r1.content);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(comment_r1.likeCount);\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.activeReplyId === comment_r1.commentId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", comment_r1.replies == null ? null : comment_r1.replies.length);\n  }\n}\n;\nlet UserReplyComponent = /*#__PURE__*/(() => {\n  class UserReplyComponent {\n    constructor(commentService, authService, router, toastr) {\n      this.commentService = commentService;\n      this.authService = authService;\n      this.router = router;\n      this.toastr = toastr;\n      this.comments = [];\n      this.commentAdded = new EventEmitter();\n      this.activeReplyId = null;\n      this.model = {\n        comicId: null,\n        content: null,\n        applicationUserId: '',\n        parentCommentId: null,\n        replyUserName: '',\n        answer: 0,\n        applicationUser: null\n      };\n    }\n    toggleReplyBox(commentId) {\n      this.activeReplyId = this.activeReplyId === commentId ? null : commentId;\n    }\n    OnSubmitReply(commentId) {\n      if (this.user?.applicationUserId) {\n        this.model.comicId = this.comicId;\n        this.model.parentCommentId = commentId;\n        this.model.applicationUserId = this.user?.applicationUserId;\n        // Trước khi gửi yêu cầu API\n        //this.model.replyUserName = this.comment?.replyUserName;\n        //this.model.replyUserName = 'trung ne';\n        console.log('this.model  Comment added', this.model);\n        // Gửi yêu cầu tạo comment (hoặc reply)\n        this.commentService.createComment(this.model).subscribe({\n          next: response => {\n            console.log('Comment added response :', response);\n            // Phát sự kiện với comment mới hoặc reply\n            const updatedResponse = {\n              ...response,\n              applicationUser: {\n                ...(response.applicationUser || {}),\n                userName: this.user?.email // Thêm userName từ user hiện tại\n              }\n            };\n\n            this.commentAdded.emit(updatedResponse);\n          },\n          error: err => {\n            console.error('Error adding comment:', err);\n          }\n        });\n        this.activeReplyId = null; // Đóng hộp thoại sau khi gửi\n      } else {\n        this.toastr.warning('You need to login !');\n      }\n    }\n    ngOnInit() {\n      this.user = this.authService.getUser();\n      console.log('this.comicIdthis.comicIdthis.comicIdthis.comicId', this.comments);\n    }\n    ngOnDestroy() {\n      this.AddCommentSubscription?.unsubscribe();\n    }\n    static {\n      this.ɵfac = function UserReplyComponent_Factory(t) {\n        return new (t || UserReplyComponent)(i0.ɵɵdirectiveInject(i1.CommentService), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastrService));\n      };\n    }\n    static {\n      this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n        type: UserReplyComponent,\n        selectors: [[\"app-user-reply\"]],\n        inputs: {\n          comicId: \"comicId\",\n          comments: \"comments\"\n        },\n        outputs: {\n          commentAdded: \"commentAdded\"\n        },\n        decls: 1,\n        vars: 1,\n        consts: [[\"class\", \"comments-box\", 4, \"ngFor\", \"ngForOf\"], [1, \"comments-box\"], [1, \"comments-header\"], [1, \"user-avatar\"], [1, \"user-info\"], [1, \"text-white\", 2, \"font-size\", \"0.8rem\"], [4, \"ngIf\"], [1, \"text-white-50\", \"ms-1\", 2, \"font-size\", \"0.8rem\"], [1, \"text-white-50\", \"m-0\"], [1, \"comments-actions\"], [1, \"bi\", \"bi-heart\", 2, \"font-size\", \"0.8rem\"], [1, \"ms-1\"], [1, \"text-white\", \"action-btn\", 3, \"click\"], [1, \"ms-1\", \"bi\", \"bi-reply\"], [1, \"action-btn\"], [1, \"action-btn\", 2, \"font-weight\", \"bold\"], [1, \"\", 3, \"ngSubmit\"], [\"form\", \"ngForm\"], [\"class\", \"reply-box\", 4, \"ngIf\"], [\"class\", \"replies\", 4, \"ngIf\"], [2, \"font-size\", \"0.8rem\"], [2, \"color\", \"cornflowerblue\", \"font-size\", \"0.9rem\"], [1, \"reply-box\"], [\"rows\", \"3\", \"id\", \"content\", \"name\", \"content\", \"placeholder\", \"Write your reply...\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"mt-2\"], [1, \"replies\"], [3, \"comicId\", \"comments\", \"commentAdded\"]],\n        template: function UserReplyComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵtemplate(0, UserReplyComponent_div_0_Template, 27, 10, \"div\", 0);\n          }\n          if (rf & 2) {\n            i0.ɵɵproperty(\"ngForOf\", ctx.comments);\n          }\n        },\n        dependencies: [i5.NgForOf, i5.NgIf, i6.ɵNgNoValidate, i6.DefaultValueAccessor, i6.NgControlStatus, i6.NgControlStatusGroup, i6.NgModel, i6.NgForm, UserReplyComponent, i5.DatePipe],\n        styles: [\".comments-box[_ngcontent-%COMP%]{border:solid 1px #444;padding:10px;margin-bottom:10px;border-radius:5px;background-color:#212529;color:#fff;width:100%}.comments-header[_ngcontent-%COMP%]{display:flex;align-items:center}.user-avatar[_ngcontent-%COMP%]{width:40px;height:40px;border-radius:50%;background-color:#444;margin-right:10px}.text-white[_ngcontent-%COMP%]{color:#f2f2f2;font-weight:700}.comments-meta[_ngcontent-%COMP%]{font-size:.9rem;color:#ccc}.comments-actions[_ngcontent-%COMP%]{display:flex;gap:5px;margin-top:10px}.comments-actions[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{text-decoration:none;display:flex;align-items:center;font-size:.8rem}.action-btn[_ngcontent-%COMP%]{color:#fff;text-decoration:none;cursor:pointer;font-size:.8rem;transition:color .2s ease}.action-btn[_ngcontent-%COMP%]:hover{text-decoration:underline}.replies[_ngcontent-%COMP%]{margin-left:20px;margin-top:10px}.replies[_ngcontent-%COMP%]   .comments-box[_ngcontent-%COMP%]{border:solid 1px #555;margin-bottom:10px;background-color:#2c2f33}.reply-box[_ngcontent-%COMP%]{background-color:#212529;padding:10px;margin-top:10px;border-radius:5px}.reply-box[_ngcontent-%COMP%]   textarea[_ngcontent-%COMP%]{width:100%;border:1px solid #555555;background-color:#2c2c2c;color:#fff;border-radius:5px;padding:5px}.reply-box[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]{background-color:#007bff;border:none;color:#fff;padding:8px 16px;border-radius:5px;cursor:pointer}.reply-box[_ngcontent-%COMP%]   button[_ngcontent-%COMP%]:hover{background-color:#0056b3}\"]\n      });\n    }\n  }\n  return UserReplyComponent;\n})();\nexport { UserReplyComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}